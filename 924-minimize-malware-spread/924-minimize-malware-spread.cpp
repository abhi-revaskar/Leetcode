class Solution {
public:
    int solve(int rem,vector<int> &start,vector<vector<int>> &g)
    {
        queue<int> q;
        vector<int> vis(g.size(),0);
        for(auto x:start)
            if(x!=rem)
            {
                q.push(x);
                vis[x] = 1;
            }
        int ans = 0;
        while(!q.empty())
        {
            auto u = q.front();q.pop();
            ans++;
            for(int v=0;v<g.size();v++)
                if(g[u][v] && !vis[v])
                {
                    vis[v] = 1;
                    q.push(v);
                }
        }
        return ans;
    }
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        sort(initial.begin(),initial.end());
        int n = graph.size(),idx = initial[0],infected=INT_MAX;
        for(auto x:initial)
        {
            int t = solve(x,initial,graph);
            if(t<infected)
            {
                idx = x;
                infected = t;
            }
        }
        return idx;
    }
};